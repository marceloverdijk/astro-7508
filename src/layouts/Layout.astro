---
import '@fortawesome/fontawesome-free/scss/fontawesome.scss'
import '@fortawesome/fontawesome-free/scss/solid.scss'
import '@fortawesome/fontawesome-free/scss/regular.scss'
import '@fortawesome/fontawesome-free/scss/brands.scss'
import 'bootstrap-icons/font/bootstrap-icons.scss'
import 'choices.js/src/styles/choices.scss'
import 'flatpickr/dist/flatpickr.css'
import 'glightbox/dist/css/glightbox.css'
import 'nouislider/dist/nouislider.css'
import 'tiny-slider/src/tiny-slider.scss'
import '@scss/style.scss'
import Footer from '@components/Footer.astro'
import Header from '@components/Header.astro'

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<title>{title}</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
		<meta name="generator" content={Astro.generator} />
		<script>
			const storedTheme = localStorage.getItem('theme')
	 
			const getPreferredTheme = () => {
				if (storedTheme) {
					return storedTheme
				}
				return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
			}
	
			const setTheme = function (theme) {
				if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
					document.documentElement.setAttribute('data-bs-theme', 'dark')
				} else {
					document.documentElement.setAttribute('data-bs-theme', theme)
				}
			}
	
			setTheme(getPreferredTheme())
	
			window.addEventListener('DOMContentLoaded', () => {
					var el = document.querySelector('.theme-icon-active');
				if(el != 'undefined' && el != null) {
					const showActiveTheme = theme => {
					const activeThemeIcon = document.querySelector('.theme-icon-active use')
					const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
					const svgOfActiveBtn = btnToActive.querySelector('.mode-switch use').getAttribute('href')
	
					document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
						element.classList.remove('active')
					})
	
					btnToActive.classList.add('active')
					activeThemeIcon.setAttribute('href', svgOfActiveBtn)
				}
	
				window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
					if (storedTheme !== 'light' || storedTheme !== 'dark') {
						setTheme(getPreferredTheme())
					}
				})
	
				showActiveTheme(getPreferredTheme())
	
				document.querySelectorAll('[data-bs-theme-value]')
					.forEach(toggle => {
						toggle.addEventListener('click', () => {
							const theme = toggle.getAttribute('data-bs-theme-value')
							localStorage.setItem('theme', theme)
							setTheme(theme)
							showActiveTheme(theme)
						})
					})
	
				}
			})
		</script>
		<link rel="shortcut icon" href="assets/images/favicon.ico">
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=Poppins:wght@400;500;700&display=swap">
	</head>
	<body>
		<Header />
		<main>
			<slot />
		</main>
		<Footer />
		<script is:inline src="/assets/vendor/bootstrap/bootstrap.bundle.min.js"></script>
		<script is:inline src="/assets/vendor/choices.js/choices.min.js"></script>
		<script is:inline src="/assets/vendor/flatpickr/flatpickr.min.js"></script>
		<script is:inline src="/assets/vendor/glightbox/glightbox.min.js"></script>
		<script is:inline src="/assets/vendor/nouislider/nouislider.min.js"></script>
		<script is:inline src="/assets/vendor/tiny-slider/tiny-slider.min.js"></script>
		<script>
			import '@js/functions.js'
    </script>
	</body>
</html>
